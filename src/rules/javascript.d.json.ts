import type { Rules } from '../types'

declare const data: Rules<
  | 'accessor-pairs'
  | 'array-bracket-newline'
  | 'array-bracket-spacing'
  | 'array-callback-return'
  | 'array-element-newline'
  | 'arrow-body-style'
  | 'arrow-parens'
  | 'arrow-spacing'
  | 'babel/object-curly-spacing'
  | 'babel/quotes'
  | 'babel/semi'
  | 'block-spacing'
  | 'brace-style'
  | 'camelcase'
  | 'comma-dangle'
  | 'comma-spacing'
  | 'comma-style'
  | 'computed-property-spacing'
  | 'constructor-super'
  | 'curly'
  | 'default-case-last'
  | 'dot-location'
  | 'dot-notation'
  | 'eol-last'
  | 'eqeqeq'
  | 'flowtype/boolean-style'
  | 'flowtype/delimiter-dangle'
  | 'flowtype/generic-spacing'
  | 'flowtype/object-type-curly-spacing'
  | 'flowtype/object-type-delimiter'
  | 'flowtype/quotes'
  | 'flowtype/semi'
  | 'flowtype/space-after-type-colon'
  | 'flowtype/space-before-generic-bracket'
  | 'flowtype/space-before-type-colon'
  | 'flowtype/union-intersection-spacing'
  | 'for-direction'
  | 'func-call-spacing'
  | 'function-call-argument-newline'
  | 'function-paren-newline'
  | 'generator-star-spacing'
  | 'generator-star'
  | 'getter-return'
  | 'implicit-arrow-linebreak'
  | 'indent-legacy'
  | 'indent'
  | 'jsx-quotes'
  | 'key-spacing'
  | 'keyword-spacing'
  | 'linebreak-style'
  | 'lines-around-comment'
  | 'lines-between-class-members'
  | 'max-len'
  | 'max-statements-per-line'
  | 'multiline-ternary'
  | 'new-cap'
  | 'new-parens'
  | 'newline-per-chained-call'
  | 'no-array-constructor'
  | 'no-arrow-condition'
  | 'no-async-promise-executor'
  | 'no-case-declarations'
  | 'no-class-assign'
  | 'no-comma-dangle'
  | 'no-compare-neg-zero'
  | 'no-cond-assign'
  | 'no-confusing-arrow'
  | 'no-const-assign'
  | 'no-constant-binary-expression'
  | 'no-constant-condition'
  | 'no-control-regex'
  | 'no-debugger'
  | 'no-delete-var'
  | 'no-dupe-args'
  | 'no-dupe-class-members'
  | 'no-dupe-else-if'
  | 'no-dupe-keys'
  | 'no-duplicate-case'
  | 'no-duplicate-imports'
  | 'no-empty-character-class'
  | 'no-empty-function'
  | 'no-empty-pattern'
  | 'no-empty-static-block'
  | 'no-empty'
  | 'no-eval'
  | 'no-ex-assign'
  | 'no-extend-native'
  | 'no-extra-boolean-cast'
  | 'no-extra-parens'
  | 'no-extra-semi'
  | 'no-fallthrough'
  | 'no-floating-decimal'
  | 'no-func-assign'
  | 'no-global-assign'
  | 'no-implied-eval'
  | 'no-import-assign'
  | 'no-invalid-regexp'
  | 'no-irregular-whitespace'
  | 'no-iterator'
  | 'no-labels'
  | 'no-lone-blocks'
  | 'no-loop-func'
  | 'no-loss-of-precision'
  | 'no-misleading-character-class'
  | 'no-mixed-operators'
  | 'no-mixed-spaces-and-tabs'
  | 'no-multi-spaces'
  | 'no-multi-str'
  | 'no-multiple-empty-lines'
  | 'no-new-func'
  | 'no-new-native-nonconstructor'
  | 'no-new-symbol'
  | 'no-new'
  | 'no-nonoctal-decimal-escape'
  | 'no-obj-calls'
  | 'no-object-constructor'
  | 'no-octal-escape'
  | 'no-octal'
  | 'no-proto'
  | 'no-prototype-builtins'
  | 'no-redeclare'
  | 'no-regex-spaces'
  | 'no-reserved-keys'
  | 'no-return-assign'
  | 'no-self-assign'
  | 'no-self-compare'
  | 'no-sequences'
  | 'no-setter-return'
  | 'no-shadow-restricted-names'
  | 'no-shadow'
  | 'no-space-before-semi'
  | 'no-spaced-func'
  | 'no-sparse-arrays'
  | 'no-tabs'
  | 'no-this-before-super'
  | 'no-trailing-spaces'
  | 'no-undef'
  | 'no-unexpected-multiline'
  | 'no-unmodified-loop-condition'
  | 'no-unneeded-ternary'
  | 'no-unreachable-loop'
  | 'no-unreachable'
  | 'no-unsafe-finally'
  | 'no-unsafe-negation'
  | 'no-unsafe-optional-chaining'
  | 'no-unused-labels'
  | 'no-unused-private-class-members'
  | 'no-unused-vars'
  | 'no-useless-backreference'
  | 'no-useless-call'
  | 'no-useless-catch'
  | 'no-useless-computed-key'
  | 'no-useless-escape'
  | 'no-useless-rename'
  | 'no-useless-return'
  | 'no-var'
  | 'no-void'
  | 'no-whitespace-before-property'
  | 'no-with'
  | 'no-wrap-func'
  | 'nonblock-statement-body-position'
  | 'object-curly-newline'
  | 'object-curly-spacing'
  | 'object-property-newline'
  | 'object-shorthand'
  | 'one-var-declaration-per-line'
  | 'one-var'
  | 'operator-linebreak'
  | 'padded-blocks'
  | 'padding-line-between-statements'
  | 'perfectionist/sort-array-includes'
  | 'perfectionist/sort-astro-attributes'
  | 'perfectionist/sort-classes'
  | 'perfectionist/sort-enums'
  | 'perfectionist/sort-exports'
  | 'perfectionist/sort-imports'
  | 'perfectionist/sort-interfaces'
  | 'perfectionist/sort-intersection-types'
  | 'perfectionist/sort-jsx-props'
  | 'perfectionist/sort-maps'
  | 'perfectionist/sort-named-exports'
  | 'perfectionist/sort-named-imports'
  | 'perfectionist/sort-object-types'
  | 'perfectionist/sort-objects'
  | 'perfectionist/sort-svelte-attributes'
  | 'perfectionist/sort-union-types'
  | 'perfectionist/sort-vue-attributes'
  | 'prefer-const'
  | 'prefer-promise-reject-errors'
  | 'prefer-regex-literals'
  | 'prefer-rest-params'
  | 'prefer-spread'
  | 'quote-props'
  | 'quotes'
  | 'regexp/confusing-quantifier'
  | 'regexp/control-character-escape'
  | 'regexp/match-any'
  | 'regexp/negation'
  | 'regexp/no-contradiction-with-assertion'
  | 'regexp/no-dupe-characters-character-class'
  | 'regexp/no-dupe-disjunctions'
  | 'regexp/no-empty-alternative'
  | 'regexp/no-empty-capturing-group'
  | 'regexp/no-empty-character-class'
  | 'regexp/no-empty-group'
  | 'regexp/no-empty-lookarounds-assertion'
  | 'regexp/no-empty-string-literal'
  | 'regexp/no-escape-backspace'
  | 'regexp/no-extra-lookaround-assertions'
  | 'regexp/no-invalid-regexp'
  | 'regexp/no-invisible-character'
  | 'regexp/no-lazy-ends'
  | 'regexp/no-legacy-features'
  | 'regexp/no-misleading-capturing-group'
  | 'regexp/no-misleading-unicode-character'
  | 'regexp/no-missing-g-flag'
  | 'regexp/no-non-standard-flag'
  | 'regexp/no-obscure-range'
  | 'regexp/no-optional-assertion'
  | 'regexp/no-potentially-useless-backreference'
  | 'regexp/no-super-linear-backtracking'
  | 'regexp/no-trivially-nested-assertion'
  | 'regexp/no-trivially-nested-quantifier'
  | 'regexp/no-unused-capturing-group'
  | 'regexp/no-useless-assertions'
  | 'regexp/no-useless-backreference'
  | 'regexp/no-useless-character-class'
  | 'regexp/no-useless-dollar-replacements'
  | 'regexp/no-useless-escape'
  | 'regexp/no-useless-flag'
  | 'regexp/no-useless-lazy'
  | 'regexp/no-useless-non-capturing-group'
  | 'regexp/no-useless-quantifier'
  | 'regexp/no-useless-range'
  | 'regexp/no-useless-set-operand'
  | 'regexp/no-useless-string-literal'
  | 'regexp/no-useless-two-nums-quantifier'
  | 'regexp/no-zero-quantifier'
  | 'regexp/optimal-lookaround-quantifier'
  | 'regexp/optimal-quantifier-concatenation'
  | 'regexp/prefer-character-class'
  | 'regexp/prefer-d'
  | 'regexp/prefer-plus-quantifier'
  | 'regexp/prefer-predefined-assertion'
  | 'regexp/prefer-question-quantifier'
  | 'regexp/prefer-range'
  | 'regexp/prefer-set-operation'
  | 'regexp/prefer-star-quantifier'
  | 'regexp/prefer-unicode-codepoint-escapes'
  | 'regexp/prefer-w'
  | 'regexp/simplify-set-operations'
  | 'regexp/sort-alternatives'
  | 'regexp/sort-flags'
  | 'regexp/strict'
  | 'regexp/unicode-escape'
  | 'regexp/unicode-property'
  | 'regexp/use-ignore-case'
  | 'require-await'
  | 'require-yield'
  | 'rest-spread-spacing'
  | 'semi-spacing'
  | 'semi-style'
  | 'semi'
  | 'space-after-function-name'
  | 'space-after-keywords'
  | 'space-before-blocks'
  | 'space-before-function-paren'
  | 'space-before-function-parentheses'
  | 'space-before-keywords'
  | 'space-in-brackets'
  | 'space-in-parens'
  | 'space-infix-ops'
  | 'space-return-throw-case'
  | 'space-unary-ops'
  | 'space-unary-word-ops'
  | 'spaced-comment'
  | 'standard/array-bracket-even-spacing'
  | 'standard/computed-property-even-spacing'
  | 'standard/object-curly-even-spacing'
  | 'stylistic/no-mixed-operators'
  | 'stylistic/wrap-iife'
  | 'switch-colon-spacing'
  | 'symbol-description'
  | 'template-curly-spacing'
  | 'template-tag-spacing'
  | 'tsdoc/syntax'
  | 'typescript/adjacent-overload-signatures'
  | 'typescript/array-type'
  | 'typescript/await-thenable'
  | 'typescript/ban-ts-comment'
  | 'typescript/ban-tslint-comment'
  | 'typescript/ban-types'
  | 'typescript/block-spacing'
  | 'typescript/brace-style'
  | 'typescript/class-literal-property-style'
  | 'typescript/comma-dangle'
  | 'typescript/comma-spacing'
  | 'typescript/consistent-generic-constructors'
  | 'typescript/consistent-indexed-object-style'
  | 'typescript/consistent-return'
  | 'typescript/consistent-type-assertions'
  | 'typescript/consistent-type-definitions'
  | 'typescript/consistent-type-exports'
  | 'typescript/consistent-type-imports'
  | 'typescript/dot-notation'
  | 'typescript/explicit-function-return-type'
  | 'typescript/func-call-spacing'
  | 'typescript/indent'
  | 'typescript/key-spacing'
  | 'typescript/keyword-spacing'
  | 'typescript/lines-around-comment'
  | 'typescript/lines-between-class-members'
  | 'typescript/member-delimiter-style'
  | 'typescript/method-signature-style'
  | 'typescript/naming-convention'
  | 'typescript/no-array-constructor'
  | 'typescript/no-array-delete'
  | 'typescript/no-base-to-string'
  | 'typescript/no-confusing-non-null-assertion'
  | 'typescript/no-confusing-void-expression'
  | 'typescript/no-dupe-class-members'
  | 'typescript/no-duplicate-enum-values'
  | 'typescript/no-duplicate-type-constituents'
  | 'typescript/no-dynamic-delete'
  | 'typescript/no-empty-function'
  | 'typescript/no-empty-interface'
  | 'typescript/no-explicit-any'
  | 'typescript/no-extra-non-null-assertion'
  | 'typescript/no-extra-parens'
  | 'typescript/no-extra-semi'
  | 'typescript/no-extraneous-class'
  | 'typescript/no-floating-promises'
  | 'typescript/no-for-in-array'
  | 'typescript/no-implied-eval'
  | 'typescript/no-import-type-side-effects'
  | 'typescript/no-inferrable-types'
  | 'typescript/no-invalid-void-type'
  | 'typescript/no-loop-func'
  | 'typescript/no-loss-of-precision'
  | 'typescript/no-meaningless-void-operator'
  | 'typescript/no-misused-new'
  | 'typescript/no-misused-promises'
  | 'typescript/no-mixed-enums'
  | 'typescript/no-namespace'
  | 'typescript/no-non-null-asserted-optional-chain'
  | 'typescript/no-non-null-assertion'
  | 'typescript/no-redeclare'
  | 'typescript/no-redundant-type-constituents'
  | 'typescript/no-this-alias'
  | 'typescript/no-throw-literal'
  | 'typescript/no-unnecessary-boolean-literal-compare'
  | 'typescript/no-unnecessary-condition'
  | 'typescript/no-unnecessary-qualifier'
  | 'typescript/no-unnecessary-type-arguments'
  | 'typescript/no-unnecessary-type-assertion'
  | 'typescript/no-unnecessary-type-constraint'
  | 'typescript/no-unsafe-argument'
  | 'typescript/no-unsafe-assignment'
  | 'typescript/no-unsafe-call'
  | 'typescript/no-unsafe-declaration-merging'
  | 'typescript/no-unsafe-enum-comparison'
  | 'typescript/no-unsafe-member-access'
  | 'typescript/no-unsafe-return'
  | 'typescript/no-unsafe-unary-minus'
  | 'typescript/no-unused-expressions'
  | 'typescript/no-unused-vars'
  | 'typescript/no-use-before-define'
  | 'typescript/no-useless-constructor'
  | 'typescript/no-useless-empty-export'
  | 'typescript/no-useless-template-literals'
  | 'typescript/no-var-requires'
  | 'typescript/non-nullable-type-assertion-style'
  | 'typescript/object-curly-spacing'
  | 'typescript/only-throw-error'
  | 'typescript/padding-line-between-statements'
  | 'typescript/prefer-as-const'
  | 'typescript/prefer-destructuring'
  | 'typescript/prefer-find'
  | 'typescript/prefer-for-of'
  | 'typescript/prefer-function-type'
  | 'typescript/prefer-includes'
  | 'typescript/prefer-namespace-keyword'
  | 'typescript/prefer-nullish-coalescing'
  | 'typescript/prefer-optional-chain'
  | 'typescript/prefer-promise-reject-errors'
  | 'typescript/prefer-readonly-parameter-types'
  | 'typescript/prefer-readonly'
  | 'typescript/prefer-reduce-type-parameter'
  | 'typescript/prefer-regexp-exec'
  | 'typescript/prefer-return-this-type'
  | 'typescript/prefer-string-starts-ends-with'
  | 'typescript/prefer-ts-expect-error'
  | 'typescript/promise-function-async'
  | 'typescript/quotes'
  | 'typescript/require-array-sort-compare'
  | 'typescript/require-await'
  | 'typescript/restrict-plus-operands'
  | 'typescript/restrict-template-expressions'
  | 'typescript/return-await'
  | 'typescript/semi'
  | 'typescript/space-before-blocks'
  | 'typescript/space-before-function-paren'
  | 'typescript/space-infix-ops'
  | 'typescript/strict-boolean-expressions'
  | 'typescript/switch-exhaustiveness-check'
  | 'typescript/triple-slash-reference'
  | 'typescript/type-annotation-spacing'
  | 'typescript/unbound-method'
  | 'typescript/unified-signatures'
  | 'typescript/use-unknown-in-catch-callback-variable'
  | 'unicorn/consistent-function-scoping'
  | 'unicorn/empty-brace-spaces'
  | 'unicorn/error-message'
  | 'unicorn/no-instanceof-array'
  | 'unicorn/no-keyword-prefix'
  | 'unicorn/no-nested-ternary'
  | 'unicorn/no-new-buffer'
  | 'unicorn/no-static-only-class'
  | 'unicorn/no-typeof-undefined'
  | 'unicorn/no-useless-fallback-in-spread'
  | 'unicorn/no-zero-fractions'
  | 'unicorn/number-literal-case'
  | 'unicorn/numeric-separators-style'
  | 'unicorn/prefer-blob-reading-methods'
  | 'unicorn/prefer-event-target'
  | 'unicorn/prefer-modern-math-apis'
  | 'unicorn/prefer-node-protocol'
  | 'unicorn/prefer-reflect-apply'
  | 'unicorn/prefer-ternary'
  | 'unicorn/prefer-type-error'
  | 'unicorn/prevent-abbreviations'
  | 'unicorn/template-indent'
  | 'use-isnan'
  | 'valid-typeof'
  | 'vue/array-bracket-newline'
  | 'vue/array-bracket-spacing'
  | 'vue/array-element-newline'
  | 'vue/arrow-spacing'
  | 'vue/block-spacing'
  | 'vue/block-tag-newline'
  | 'vue/brace-style'
  | 'vue/comma-dangle'
  | 'vue/comma-spacing'
  | 'vue/comma-style'
  | 'vue/dot-location'
  | 'vue/func-call-spacing'
  | 'vue/html-closing-bracket-newline'
  | 'vue/html-closing-bracket-spacing'
  | 'vue/html-end-tags'
  | 'vue/html-indent'
  | 'vue/html-quotes'
  | 'vue/html-self-closing'
  | 'vue/key-spacing'
  | 'vue/keyword-spacing'
  | 'vue/max-attributes-per-line'
  | 'vue/max-len'
  | 'vue/multiline-html-element-content-newline'
  | 'vue/multiline-ternary'
  | 'vue/mustache-interpolation-spacing'
  | 'vue/no-extra-parens'
  | 'vue/no-multi-spaces'
  | 'vue/no-spaces-around-equal-signs-in-attribute'
  | 'vue/object-curly-newline'
  | 'vue/object-curly-spacing'
  | 'vue/object-property-newline'
  | 'vue/operator-linebreak'
  | 'vue/quote-props'
  | 'vue/script-indent'
  | 'vue/singleline-html-element-content-newline'
  | 'vue/space-in-parens'
  | 'vue/space-infix-ops'
  | 'vue/space-unary-ops'
  | 'vue/template-curly-spacing'
  | 'wrap-iife'
  | 'wrap-regex'
  | 'yield-star-spacing'
  | 'yoda'
>
export default data
